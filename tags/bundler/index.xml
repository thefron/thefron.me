<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bundler on Thefron</title><link>https://thefron.me/tags/bundler/</link><description>Recent content in bundler on Thefron</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Wed, 28 Sep 2016 15:23:39 +0900</lastBuildDate><atom:link href="https://thefron.me/tags/bundler/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker를 이용한 bundle install 및 Gemfile.lock 업데이트하기</title><link>https://thefron.me/bundle-install-using-docker/</link><pubDate>Wed, 28 Sep 2016 15:23:39 +0900</pubDate><guid>https://thefron.me/bundle-install-using-docker/</guid><description>여러개의 ruby 프로젝트를 작업하다보면 rbenv, rvm 등으로 버전별, 프로젝트별 ruby와 gem들을(rvm의 경우 gemset) 관리해야하는 귀찮음이 생긴다.
지난번에 로컬에 프로젝트 관련 gem을 깔지 않기로 결심했으니 rubygems의 디펜던시를 기록하는 Gemfile.lock 파일 역시 docker를 이용해 업데이트를 하기로 했다.
아래와 같은 Gemfile이 있다고 하자.
# Gemfile ruby &amp;#39;2.3.1&amp;#39; source &amp;#39;https://rubygems.org&amp;#39; gem &amp;#39;sinatra&amp;#39; 위 Gemfile에서 ruby 버전을 2.3.1로 명시하고 있기 때문에 rvm이든 rbenv든 이용해서 로컬에 해당 버전을 설치해 줘야 bundle install을 실행할 수 있다. 하지만 docker를 이용하면 원하는 ruby 버전으로 one-off container를 만들어 현재 경로를 mount한 채로 bundle install을 실행하면 Gemfile.</description></item></channel></rss>