<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thefron</title><link>https://thefron.me/</link><description>Recent content on Thefron</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 25 Jul 2017 01:03:26 +0900</lastBuildDate><atom:link href="https://thefron.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Hangul Ipsum Update</title><link>https://thefron.me/hangul-ipsum-update/</link><pubDate>Tue, 25 Jul 2017 01:03:26 +0900</pubDate><guid>https://thefron.me/hangul-ipsum-update/</guid><description>한글입숨
기능이 너무 단순해서 딱히 손 안되도 잘 돌아가던 서비스지만, 마지막 수정일이 6년 전인건 좀 너무하다 싶어서 간만에 손을 좀 봤다. 그새 레일즈는 메이저 버전이 3에서 5로 올랐고, 한 때 유행했던 패턴 백그라운드는 관짝에 들어간 지 오래다. 딱히 기능을 바꿀건 없어서 약간의 리팩토링만 하고 배포 완료. 눈꼽만큼이지만 방문자가 꾸준히 있긴 하니 유지는 해야지 싶다.</description></item><item><title>Yeelight Review</title><link>https://thefron.me/yeelight-review/</link><pubDate>Tue, 21 Mar 2017 23:43:02 +0900</pubDate><guid>https://thefron.me/yeelight-review/</guid><description>회사에 조명에 관심많은 형이 있는데, 하얀 형광등을 무지 싫어하고 간접조명을 좋아하는 스타일이다. 작년에 이사한 사무실도 셀프로 조명 시공을 했고, 집에서도 알렉사와 필립스 Hue 조합으로 조명 시스템을 구비해놓은 사람이다. 나도 어쩌다보니 영향을 받아 스마트 전구에 관심을 갖게됐다.
당시(지금도) 필립스 Hue는 좀 비싼 선택지라 대안이 있는지 알아보던 중 Indiegogo에서 &amp;ldquo;World&amp;rsquo;s Most Affordable Wi-Fi Smart Bulb&amp;rdquo; 라는 타이틀을 단 스마트 전구를 보게됐고, 개당 $20도 안하는 가격이라 확 질렀었다.
그로부터 장장 16개월이라는 기나긴 인내의 시간이 시작된다 -ㅅ-</description></item><item><title>Bundle Install Using Docker</title><link>https://thefron.me/bundle-install-using-docker/</link><pubDate>Wed, 28 Sep 2016 15:23:39 +0900</pubDate><guid>https://thefron.me/bundle-install-using-docker/</guid><description>여러개의 ruby 프로젝트를 작업하다보면 rbenv, rvm 등으로 버전별, 프로젝트별 ruby와 gem들을(rvm의 경우 gemset) 관리해야하는 귀찮음이 생긴다.
지난번에 로컬에 프로젝트 관련 gem을 깔지 않기로 결심했으니 rubygems의 디펜던시를 기록하는 Gemfile.lock 파일 역시 docker를 이용해 업데이트를 하기로 했다.
아래와 같은 Gemfile이 있다고 하자.
# Gemfile ruby &amp;#39;2.3.1&amp;#39; source &amp;#39;https://rubygems.org&amp;#39; gem &amp;#39;sinatra&amp;#39; 위 Gemfile에서 ruby 버전을 2.3.1로 명시하고 있기 때문에 rvm이든 rbenv든 이용해서 로컬에 해당 버전을 설치해 줘야 bundle install을 실행할 수 있다. 하지만 docker를 이용하면 원하는 ruby 버전으로 one-off container를 만들어 현재 경로를 mount한 채로 bundle install을 실행하면 Gemfile.</description></item><item><title>Heroku Pg Psql Using Docker</title><link>https://thefron.me/heroku-pg-psql-using-docker/</link><pubDate>Wed, 31 Aug 2016 16:45:45 +0900</pubDate><guid>https://thefron.me/heroku-pg-psql-using-docker/</guid><description>최근 로컬 개발환경을 리셋하면서 redis, postgres 등 각종 개발 디펜던시를 설치하지 않고, 오직 docker만 이용해서 로컬 환경을 최대한 깔끔하게 유지하기로 마음먹었다(똥고집이다).
그런데 난관이 등장했으니,
프로덕션 배포 중인 heroku 앱의 postgres 디비 콘솔에 접근하기 위해 heroku toolbelt에서 제공하는 heroku pg:psql 커맨드를 자주 사용하는데, 이 때 로컬 경로의 psql을 이용한다는 것이다.
$ heroku pg:psql ---&amp;gt; Connecting to DATABASE_URL sh: psql: command not found 굳이 toolbelt를 쓰지 않고 docker run -it --rm postgres psql 커맨드에 적당히 credential을 넣어주면 되지만, 매번 credential을 알아오기도 귀찮고 heroku toolbelt를 썩히기도 아까워 해결책이 있을지 고민해봤다.</description></item><item><title>About</title><link>https://thefron.me/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thefron.me/about/</guid><description> Hoseong Hwang / @thefron Software Engineer &amp;amp; DevOps Part Lead @ Buzzvil
Previous 42 Company Cofounder &amp;amp; Software Engineer (Acquired by Buzzvil)
울트라캡숑 Cofounder &amp;amp; Software Engineer (Acquired by Kakao)
Find me at Github @thefron Twitter @thefron</description></item></channel></rss>